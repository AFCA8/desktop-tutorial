import java.awt.*;

public class GomokuGame {
    public static void main(String[] args) throws InterruptedException {

        //set GUI
        Font font = new Font("Default", Font.PLAIN, 20);
        StdDraw.setFont(font);
        int color = 0;
        int chessboardSize;
        int kbGap;
        StdDraw.setXscale(0, 17);
        StdDraw.setYscale(-2, 17);
        Chessboard kb = new Chessboard();

        //prepare for the game
        boolean gameBegin = true;
        boolean PVE = false;
        StdDraw.text(8.5, 10, "Welcome to Gomoku");
        StdDraw.text(8.5, 9, "ðŸ˜Š");
        StdDraw.setPenColor(StdDraw.BLUE);
        StdDraw.filledRectangle(5, 3, 2, 1);
        StdDraw.filledRectangle(12, 3, 2, 1);
        StdDraw.setPenColor(Color.black);
        StdDraw.text(5, 3, "PVE");
        StdDraw.text(5, 5, "â˜®");
        StdDraw.text(12, 5, "âš”");
        StdDraw.text(12, 3, "PVP");

        //begin
        int playerInPve = 0;
        //determine PVP or PVE
        while (gameBegin) {
            if (StdDraw.isMousePressed() &&
                    2 < StdDraw.mouseY() && StdDraw.mouseY() < 4 &&
                    (3 < StdDraw.mouseX() && StdDraw.mouseX() < 7 ||
                            10 < StdDraw.mouseX() && StdDraw.mouseX() < 14)
            )
                gameBegin = false;
            Thread.sleep(100);
            if (3 < StdDraw.mouseX() && StdDraw.mouseX() < 7 &&
                    2 < StdDraw.mouseY() && StdDraw.mouseY() < 4)
                PVE = true;
        }
        //PVE; Choose the color of chess
        if (PVE) {
            StdDraw.clear();
            StdDraw.text(8.5, 13, "Choose the color of your chess");
            StdDraw.setPenColor(StdDraw.BLUE);
            StdDraw.filledRectangle(5, 4, 2, 1);
            StdDraw.filledRectangle(12, 4, 2, 1);
            StdDraw.setPenColor(StdDraw.WHITE);
            StdDraw.filledCircle(10.5, 4, 0.4);
            StdDraw.setPenColor(StdDraw.BLACK);
            StdDraw.filledCircle(3.5, 4, 0.4);
            while (true) {
                StdDraw.text(5, 4, "Black");
                StdDraw.text(12, 4, "White");
                if (StdDraw.isMousePressed() &&
                        3 < StdDraw.mouseY() && StdDraw.mouseY() < 5 &&
                        (3 < StdDraw.mouseX() && StdDraw.mouseX() < 7 ||
                                10 < StdDraw.mouseX() && StdDraw.mouseX() < 14)) {
                    if (StdDraw.mouseX() < 7)
                        playerInPve = 1;
                    break;
                }
            }
        }
        StdDraw.clear();
        Thread.sleep(100);
        //set the size
        StdDraw.text(8.5, 13, "Set the size of the board");
        StdDraw.setPenColor(StdDraw.BLUE);
        StdDraw.filledRectangle(5, 4, 2, 1);
        StdDraw.filledRectangle(12, 4, 2, 1);
        StdDraw.setPenColor(StdDraw.BLACK);
        while (true) {
            StdDraw.text(5, 4, "15*15");
            StdDraw.text(12, 4, "17*17");
            if (StdDraw.isMousePressed() &&
                    3 < StdDraw.mouseY() && StdDraw.mouseY() < 5 &&
                    (3 < StdDraw.mouseX() && StdDraw.mouseX() < 7 ||
                            10 < StdDraw.mouseX() && StdDraw.mouseX() < 14)) {
                if (StdDraw.mouseX() < 7)
                    chessboardSize = 15;
                else
                    chessboardSize = 17;
                break;
            }
        }
        kbGap = 17 - chessboardSize;
        boolean gameContinue = true;
        boolean PVEForbid = true;
        timer.gameset();
        while (gameContinue) {
            kb.setKbGap(kbGap);
            gameContinue = false;
            StdDraw.clear();
            StdDraw.setPenColor(216, 168, 67);
            StdDraw.filledSquare(0.5 + chessboardSize / 2, 0.5 + chessboardSize / 2, 0.5 + chessboardSize / 2);
            StdDraw.setPenColor(Color.black);
            for (int i = 0; i <= chessboardSize; i++) {
                StdDraw.line(0, i, chessboardSize, i);
                StdDraw.line(i, 0, i, chessboardSize);
            }
            StdDraw.setPenColor(Color.RED);
            StdDraw.filledSquare(8.5, -1, 1);
            int x = 99;
            int y = 99;
            boolean overtime = true;
            while (true) {
                boolean setc = true;
                if (color == 1)
                    StdDraw.setPenColor(Color.black);
                else
                    StdDraw.setPenColor(Color.white);
                while (setc) {
                    if (PVEForbid) {
                        if (PVE && color == playerInPve) {
                            int[] bot = kb.Bota((playerInPve + 1) % 2);
                            x = bot[0];
                            y = bot[1];
                            setc = false;
                            color = (color + 1) % 2;
                            Thread.sleep(100);
                        }
                    }
                    if (StdDraw.isMousePressed()) {
                        if (StdDraw.mouseX() > 0 && StdDraw.mouseY() > 0) {
                            if (StdDraw.mouseX() < 17 - kbGap && StdDraw.mouseY() < 17 - kbGap) {
                                if (kb.getinfo((int) StdDraw.mouseX(), (int) StdDraw.mouseY()) == -1) {
                                    setc = false;
                                    x = (int) StdDraw.mouseX();
                                    y = (int) StdDraw.mouseY();
                                    color = (color + 1) % 2;
                                    Thread.sleep(100);
                                }
                            }
                        }
                    }
                    boolean forbidden = false;
                    if (x < 17 && color == 1) {
                        if (y < 17)
                            forbidden = kb.forbidden(x, y, kbGap);
                    }
                    if (!PVE) {
                        if (forbidden)
                            color += 1;
                        if (color == 1)
                            StdDraw.setPenColor(Color.black);
                        else
                            StdDraw.setPenColor(Color.white);
                        if (!forbidden) {
                            StdDraw.filledCircle(x + 0.5, y + 0.5, 0.5);
                            if (color == 0) {
                                StdDraw.setPenColor(Color.black);
                                StdDraw.filledCircle(8.5, -1, 0.5);
                                StdDraw.setPenColor(Color.WHITE);
                            }
                            if (color == 1) {
                                StdDraw.setPenColor(Color.WHITE);
                                StdDraw.filledCircle(8.5, -1, 0.5);
                                StdDraw.setPenColor(Color.black);
                            }
                            if (x < 17 && y < 17)
                                kb.PlaceC(x, y, color);
                        }
                        if (forbidden) {
                            StdDraw.setPenColor(StdDraw.RED);
                            StdDraw.text(3, -1, "You can't place there!");
                            color = (color + 1) % 2;
                        }
                        if (StdDraw.isMousePressed() && forbidden) {
                            color = (color + 1) % 2;
                            StdDraw.setPenColor(Color.WHITE);
                            StdDraw.filledRectangle(1, -2, 5, 2);
                        }
                    } else {
                        PVEForbid = !forbidden;
                        if (forbidden)
                            color += 1;
                        if (color == 1)
                            StdDraw.setPenColor(Color.black);
                        else
                            StdDraw.setPenColor(Color.white);
                        if (!forbidden) {
                            StdDraw.filledCircle(x + 0.5, y + 0.5, 0.5);
                            if (color == 0) {
                                StdDraw.setPenColor(Color.black);
                                StdDraw.filledCircle(8.5, -1, 0.5);
                                StdDraw.setPenColor(Color.WHITE);
                            }
                            if (color == 1) {
                                StdDraw.setPenColor(Color.WHITE);
                                StdDraw.filledCircle(8.5, -1, 0.5);
                                StdDraw.setPenColor(Color.black);
                            }
                            if (x < 17 && y < 17)
                                kb.PlaceC(x, y, color);
                        }
                        if (x < chessboardSize && y < chessboardSize) {
                            if (kb.Win(x, y, color))
                                break;
                        }
                        if (forbidden) {
                            StdDraw.setPenColor(StdDraw.RED);
                            StdDraw.text(3, -1, "You can't place there!");
                            color = (color + 1) % 2;
                        }
                        if (StdDraw.isMousePressed() && forbidden) {
                            color = (color + 1) % 2;
                            StdDraw.setPenColor(Color.WHITE);
                            StdDraw.filledRectangle(1, -2, 5, 2);
                        }
                    }
                    if (forbidden)
                        overtime = timer.countTime(0);
                    else
                        overtime = timer.countTime(color);
                    if (!overtime && forbidden) {
                        color = (color + 1) % 2;
                        break;
                    }
                    if (!overtime)
                        break;
                }
                if (!overtime) {
                    StdDraw.clear();
                    StdDraw.setPenColor(Color.RED);
                    if (color == 0) {
                        StdDraw.text(10, 5, "White win. Congratulationsâœ¨âœ¨âœ¨âœ¨");
                        Thread.sleep(2000);
                        break;
                    }
                    if (color == 1) {
                        StdDraw.text(10, 5, "Black win. Congratulationsâœ¨âœ¨âœ¨âœ¨");
                        Thread.sleep(2000);
                        break;
                    }
                }
                if (kb.Win(x, y, color)) {
                    StdDraw.clear();
                    StdDraw.setPenColor(Color.RED);
                    if (color == 0) {
                        StdDraw.text(8.5, 9.5, "White win. Congratulationsâœ¨âœ¨âœ¨âœ¨");
                        Thread.sleep(2000);
                        break;
                    }
                    if (color == 1) {
                        StdDraw.text(8.5, 9.5, "Black win. Congratulationsâœ¨âœ¨âœ¨âœ¨");
                        Thread.sleep(2000);
                        break;
                    }
                }
            }
            StdDraw.clear();
            StdDraw.text(8.5, 9, "Play again?");
            boolean pa = true;
            StdDraw.setPenColor(StdDraw.BLUE);
            StdDraw.filledRectangle(2.5, 1, 2, 1);
            StdDraw.filledRectangle(7.5, 1, 2, 1);
            StdDraw.filledRectangle(15, 1, 1.5, 1);
            StdDraw.setPenColor(Color.black);
            StdDraw.text(2.5, 1, "PVE");
            StdDraw.text(7.5, 1, "PVP");
            StdDraw.text(15, 1, "Exit game");
            while(pa){
                if(StdDraw.isMousePressed()){
                    pa = false;
                    if(StdDraw.mouseX() > 10)
                        System.exit(0);
                }Thread.sleep(100);
                if(StdDraw.mouseX() < 10){
                    gameContinue = true;
                    color = 0;
                }
                if(StdDraw.mouseX() < 5)
                    PVE = true;
                if(StdDraw.mouseX() > 5)
                    PVE = false;
            }
            if (PVE) {
                StdDraw.clear();
                StdDraw.text(8.5, 13, "Choose the color of your chess");
                StdDraw.setPenColor(StdDraw.BLUE);
                StdDraw.filledRectangle(5, 4, 2, 1);
                StdDraw.filledRectangle(12, 4, 2, 1);
                StdDraw.setPenColor(StdDraw.WHITE);
                StdDraw.filledCircle(10.5, 4, 0.4);
                StdDraw.setPenColor(StdDraw.BLACK);
                StdDraw.filledCircle(3.5, 4, 0.4);
                while (true) {
                    StdDraw.text(5, 4, "Black");
                    StdDraw.text(12, 4, "White");
                    if (StdDraw.isMousePressed() &&
                            3 < StdDraw.mouseY() && StdDraw.mouseY() < 5 &&
                            (3 < StdDraw.mouseX() && StdDraw.mouseX() < 7 ||
                                    10 < StdDraw.mouseX() && StdDraw.mouseX() < 14)) {
                        if (StdDraw.mouseX() < 7)
                            playerInPve = 1;
                        break;
                    }
                }
                Thread.sleep(200);
                StdDraw.clear();
                StdDraw.text(8.5, 13, "Set the size of the board");
                StdDraw.setPenColor(StdDraw.BLUE);
                StdDraw.filledRectangle(5, 4, 2, 1);
                StdDraw.filledRectangle(12, 4, 2, 1);
                StdDraw.setPenColor(StdDraw.BLACK);
                while (true) {
                    StdDraw.text(5, 4, "15*15");
                    StdDraw.text(12, 4, "17*17");
                    if (StdDraw.isMousePressed() &&
                            3 < StdDraw.mouseY() && StdDraw.mouseY() < 5 &&
                            (3 < StdDraw.mouseX() && StdDraw.mouseX() < 7 ||
                                    10 < StdDraw.mouseX() && StdDraw.mouseX() < 14)) {
                        if (StdDraw.mouseX() < 7)
                            chessboardSize = 15;
                        else
                            chessboardSize = 17;
                        break;
                    }
                }
                kb.kbclear();
                timer.gameset();
            }
            StdDraw.clear();
        }
    }
}
